#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quality Remote Agent - Cliente
Sistema de monitoramento e controle remoto para servi√ßos Quality
"""

import sys
import os
import argparse
import signal
import time
from pathlib import Path

# Adicionar o diret√≥rio raiz ao path
sys.path.append(str(Path(__file__).parent))

from core.agent import QualityAgent
from utils.logger import setup_logger
from config.settings import load_config

def signal_handler(signum, frame):
    """Handler para sinais de interrup√ß√£o"""
    print("\nüõë Recebido sinal de interrup√ß√£o. Encerrando agente...")
    sys.exit(0)

def main():
    """Fun√ß√£o principal do agente Quality"""
    parser = argparse.ArgumentParser(description='Quality Remote Agent')
    parser.add_argument('--config', '-c', default='config/services_config.json',
                       help='Caminho para arquivo de configura√ß√£o')
    parser.add_argument('--install-service', action='store_true',
                       help='Instalar como servi√ßo Windows')
    parser.add_argument('--debug', action='store_true',
                       help='Modo debug com logs detalhados')
    
    args = parser.parse_args()
    
    # Configurar handlers de sinal
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    try:
        # Carregar configura√ß√£o
        config = load_config(args.config)
        
        # Configurar logger
        logger = setup_logger('quality_agent', debug=args.debug)
        logger.info("üöÄ Iniciando Quality Remote Agent...")
        
        # Criar e iniciar agente
        agent = QualityAgent(config, logger)
        
        if args.install_service:
            logger.info("üì¶ Instalando como servi√ßo Windows...")
            agent.install_as_service()
        else:
            logger.info("üîÑ Iniciando agente em modo interativo...")
            agent.start()
            
    except KeyboardInterrupt:
        print("\nüëã Agente encerrado pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå Erro fatal: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
