#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de Corre√ß√£o - Loop do Servidor
Corrige o problema do servidor que termina em vez de ficar rodando
"""

import os
import shutil

def fix_server_loop():
    """Corrige problema do loop do servidor"""
    print("üîß Corrigindo problema do loop do servidor...")
    
    try:
        # Caminho do servidor instalado
        server_path = "C:\\Quality\\ControlPanel"
        main_file = os.path.join(server_path, "main.py")
        
        if not os.path.exists(main_file):
            print(f"‚ùå Arquivo main.py n√£o encontrado: {main_file}")
            return False
        
        print(f"   üìù Corrigindo: {main_file}")
        
        # Fazer backup
        backup_file = main_file + '.backup3'
        shutil.copy2(main_file, backup_file)
        print(f"   üíæ Backup criado: {backup_file}")
        
        # Ler arquivo
        with open(main_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Corrigir o problema
        old_code = """        server.start()
            
    except KeyboardInterrupt:"""
        
        new_code = """        server.start()
        
        # Manter o servidor rodando
        logger.info("üîÑ Servidor rodando... Pressione Ctrl+C para parar")
        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            logger.info("üõë Parando servidor...")
            server.stop()
            
    except KeyboardInterrupt:"""
        
        if old_code in content:
            content = content.replace(old_code, new_code)
            
            # Salvar arquivo corrigido
            with open(main_file, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print("   ‚úÖ Problema do loop do servidor corrigido!")
        else:
            print("   ‚ÑπÔ∏è  C√≥digo j√° est√° correto ou n√£o encontrado")
            return True
        
        print("‚úÖ Corre√ß√£o conclu√≠da!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao corrigir loop do servidor: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("=" * 60)
    print("üîß CORRE√á√ÉO - LOOP DO SERVIDOR")
    print("=" * 60)
    print("Corrigindo problema do servidor que termina em vez de ficar rodando")
    print("=" * 60)
    print()
    
    # Corrigir loop do servidor
    if fix_server_loop():
        print("\n" + "=" * 60)
        print("üéâ CORRE√á√ÉO CONCLU√çDA COM SUCESSO!")
        print("=" * 60)
        print("‚úÖ Problema do loop do servidor corrigido")
        print("‚úÖ Servidor agora ficar√° rodando continuamente")
        print()
        print("üöÄ Agora voc√™ pode:")
        print("   1. Reiniciar o servidor")
        print("   2. O servidor ficar√° rodando (n√£o terminar√°)")
        print("   3. Testar a conectividade")
        print("   4. Conectar o cliente")
        print("=" * 60)
    else:
        print("\n‚ùå Falha na corre√ß√£o")
        print("   Verifique se o servidor est√° instalado corretamente")
    
    input("\nPressione Enter para finalizar...")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã Corre√ß√£o cancelada pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro inesperado: {e}")
        input("\nPressione Enter para sair...")
